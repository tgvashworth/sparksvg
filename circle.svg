<!-- sparksvg.me/circle.svg -->
<svg version="1.1"
     baseProfile="full"
     xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     xmlns:ev="http://www.w3.org/2001/xml-events"
     width="100%" height="100%"
     onload="draw()"
     onresize="clear()">
  <script><![CDATA[
    if(typeof Array.prototype.map!=="function"){Array.prototype.map=function(a){for(var b=this,c=b.length,d=[],e=0,f;e<b;)d[e]=e in b?a.call(arguments[1],b[e],e++,b):f;return d}};
    function scale(max, min, num) {return (100 * (num - min) / (max - min)) || 0;}
    function limit(max, min, num) {return num > max ? max : num < min ? min : num;}
    var timeout;
    function clear() {
      clearTimeout(timeout);
      timeout = setTimeout(function () {
        var elem = document.getElementsByTagName("svg")[0];
        while(elem.firstChild) { elem.removeChild(elem.firstChild); }
        draw();
      }, 250);
    }
    function draw() {
      var elem = document.getElementsByTagName("svg")[0],
          search = location.search.substr(1)
          segments = search.split('&')
          data = segments[0]
                  .split(",")
                  .map(function (n) {
                    return parseFloat(n, 10) || 0;
                  }),
          max = Math.max.apply(null, data),
          min = Math.min.apply(null, data);
          color = "rgba(0,0,0,0.6)",
          show_color = (search.indexOf('rgba:') != -1);
      if ( show_color ) {
        for (var i=0; i < segments.length; i++) {
          if (segments[i].indexOf('rgba:') != -1) {
            color = "rgba("+segments[i].replace('rgba:','')+")";
          }
        }
      }
      var parts = data.map(function (num) { return scale(max, min, num); }),
          div = 100 / parts.length,
          width = elem.clientWidth || elem.offsetWidth,
          height = elem.clientHeight || elem.offsetHeight,
          usePercent = !width,
          divInPx = width / parts.length,
          heightR = (height - 2) / 2,
          maxR = divInPx > heightR ? heightR : divInPx,
          cy = 50;
      maxR = usePercent ? div : maxR;
      for (var i=0; i < parts.length; i++) {
        var circle = document.createElementNS("http://www.w3.org/2000/svg", "circle");
        var cx = (i * div) + (div / 2),
            r = maxR * (parts[i] / 100);
        circle.setAttribute("title", data[i]);
        circle.setAttribute("cx", cx + "%");
        circle.setAttribute("cy", cy + "%");
        circle.setAttribute("r", r + (usePercent ? "%" : "px"));
        circle.setAttribute("fill", color);
        elem.appendChild(circle);
      }
    }
  ]]></script>
</svg>